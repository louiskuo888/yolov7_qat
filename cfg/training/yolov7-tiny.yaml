# parameters
nc: 80  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# yolov7-tiny backbone
backbone:
  # [from, number, module, args] c2, k=1, s=1, p=None, g=1, act=True
  [[-1, 1, DSQuantConv2d_BNFoldVP, [32, 3, 0, 2, 0, 1, 1, False, 1e-6, 0.01, True]],  # 0-P1/2  
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, DSQuantConv2d_BNFoldVP, [64, 3, 0, 2, 0]],  # 1-P2/4 -> 2
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, DSQuantConv2d_BNFoldVP, [32, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-3, 1, DSQuantConv2d_BNFoldVP, [32, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, DSQuantConv2d_BNFoldVP, [32, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, DSQuantConv2d_BNFoldVP, [32, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [[-1, -3, -5, -7], 1, Concat, [1]],
   [-1, 1, DSQuantConv2d_BNFoldVP, [64, 1, 0, 1, 0]],  # 7 -> 13
   [-1, 1, nn.ReLU, inplace=True],
   
   [-1, 1, MP, []],  # 8-P3/8 -> 15
   [-1, 1, DSQuantConv2d_BNFoldVP, [64, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-3, 1, DSQuantConv2d_BNFoldVP, [64, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, DSQuantConv2d_BNFoldVP, [64, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, DSQuantConv2d_BNFoldVP, [64, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [[-1, -3, -5, -7], 1, Concat, [1]],
   [-1, 1, DSQuantConv2d_BNFoldVP, [128, 1, 0, 1, 0]],  # 14 -> 25
   [-1, 1, nn.ReLU, inplace=True],
   
   [-1, 1, MP, []],  # 15-P4/16 -> 27
   [-1, 1, DSQuantConv2d_BNFoldVP, [128, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-3, 1, DSQuantConv2d_BNFoldVP, [128, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, DSQuantConv2d_BNFoldVP, [128, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, DSQuantConv2d_BNFoldVP, [128, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [[-1, -3, -5, -7], 1, Concat, [1]],
   [-1, 1, DSQuantConv2d_BNFoldVP, [256, 1, 0, 1, 0]],  # 21 -> 37
   [-1, 1, nn.ReLU, inplace=True],
   
   [-1, 1, MP, []],  # 22-P5/32 -> 39
   [-1, 1, DSQuantConv2d_BNFoldVP, [256, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-3, 1, DSQuantConv2d_BNFoldVP, [256, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, DSQuantConv2d_BNFoldVP, [256, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, DSQuantConv2d_BNFoldVP, [256, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [[-1, -3, -5, -7], 1, Concat, [1]],
   [-1, 1, DSQuantConv2d_BNFoldVP, [512, 1, 0, 1, 0]],  # 28 -> 49
   [-1, 1, nn.ReLU, inplace=True],
  ]

# yolov7-tiny head
head:
  [[-1, 1, DSQuantConv2d_BNFoldVP, [256, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-3, 1, DSQuantConv2d_BNFoldVP, [256, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, SP, [5]],
   [-2, 1, SP, [9]],
   [-3, 1, SP, [13]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, DSQuantConv2d_BNFoldVP, [256, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [[-1, -9], 1, Concat, [1]],
   [-1, 1, DSQuantConv2d_BNFoldVP, [256, 1, 0, 1, 0]],  # 37 -> 62
   [-1, 1, nn.ReLU, inplace=True],
  
   [-1, 1, DSQuantConv2d_BNFoldVP, [128, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [38, 1, DSQuantConv2d_BNFoldVP, [128, 1, 0, 1, 0]], # route backbone P4
   [-1, 1, nn.ReLU, inplace=True],
   [[-1, -3], 1, Concat, [1]],
   
   [-1, 1, DSQuantConv2d_BNFoldVP, [64, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-3, 1, DSQuantConv2d_BNFoldVP, [64, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, DSQuantConv2d_BNFoldVP, [64, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, DSQuantConv2d_BNFoldVP, [64, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [[-1, -3, -5, -7], 1, Concat, [1]],
   [-1, 1, DSQuantConv2d_BNFoldVP, [128, 1, 0, 1, 0]],  # 47 -> 79
   [-1, 1, nn.ReLU, inplace=True],
  
   [-1, 1, DSQuantConv2d_BNFoldVP, [64, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [26, 1, DSQuantConv2d_BNFoldVP, [64, 1, 0, 1, 0]], # route backbone P3
   [-1, 1, nn.ReLU, inplace=True],
   [[-1, -3], 1, Concat, [1]],
   
   [-1, 1, DSQuantConv2d_BNFoldVP, [32, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-3, 1, DSQuantConv2d_BNFoldVP, [32, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, DSQuantConv2d_BNFoldVP, [32, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, DSQuantConv2d_BNFoldVP, [32, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [[-1, -3, -5, -7], 1, Concat, [1]],
   [-1, 1, DSQuantConv2d_BNFoldVP, [64, 1, 0, 1, 0]],  # 57 -> 96
   [-1, 1, nn.ReLU, inplace=True],
   
   [-1, 1, DSQuantConv2d_BNFoldVP, [128, 3, 0, 2, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [[-1, 80], 1, Concat, [1]],
   
   [-1, 1, DSQuantConv2d_BNFoldVP, [64, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-3, 1, DSQuantConv2d_BNFoldVP, [64, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, DSQuantConv2d_BNFoldVP, [64, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, DSQuantConv2d_BNFoldVP, [64, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [[-1, -3, -5, -7], 1, Concat, [1]],
   [-1, 1, DSQuantConv2d_BNFoldVP, [128, 1, 0, 1, 0]],  # 65 -> 110
   [-1, 1, nn.ReLU, inplace=True],
   
   [-1, 1, DSQuantConv2d_BNFoldVP, [256, 3, 0, 2, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [[-1, 63], 1, Concat, [1]],
   
   [-1, 1, DSQuantConv2d_BNFoldVP, [128, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-3, 1, DSQuantConv2d_BNFoldVP, [128, 1, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, DSQuantConv2d_BNFoldVP, [128, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [-1, 1, DSQuantConv2d_BNFoldVP, [128, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [[-1, -3, -5, -7], 1, Concat, [1]],
   [-1, 1, DSQuantConv2d_BNFoldVP, [256, 1, 0, 1, 0]],  # 73 -> 124
   [-1, 1, nn.ReLU, inplace=True],
      
   [97, 1, DSQuantConv2d_BNFoldVP, [128, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [111, 1, DSQuantConv2d_BNFoldVP, [256, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   [125, 1, DSQuantConv2d_BNFoldVP, [512, 3, 0, 1, 0]],
   [-1, 1, nn.ReLU, inplace=True],
   
   [[127,129,131], 1, Detect, [nc, anchors]],   # Detect(P3, P4, P5)
  ]
   

